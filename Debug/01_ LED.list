
01_ LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000278  080001bc  080001bc  000101bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000434  0800043c  0001043c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000434  08000434  0001043c  2**0
                  CONTENTS
  4 .ARM          00000000  08000434  08000434  0001043c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000434  0800043c  0001043c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000434  08000434  00010434  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000438  08000438  00010438  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001043c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  0001043c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001043c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0001046c  2**0
                  CONTENTS, READONLY
 14 .debug_info   000004ac  00000000  00000000  000104af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000145  00000000  00000000  0001095b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000a8  00000000  00000000  00010aa0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000070  00000000  00000000  00010b48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0001ee7d  00000000  00000000  00010bb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000ca6  00000000  00000000  0002fa35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000aca93  00000000  00000000  000306db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000018c  00000000  00000000  000dd170  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006d  00000000  00000000  000dd2fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001bc <__do_global_dtors_aux>:
 80001bc:	b510      	push	{r4, lr}
 80001be:	4c05      	ldr	r4, [pc, #20]	; (80001d4 <__do_global_dtors_aux+0x18>)
 80001c0:	7823      	ldrb	r3, [r4, #0]
 80001c2:	b933      	cbnz	r3, 80001d2 <__do_global_dtors_aux+0x16>
 80001c4:	4b04      	ldr	r3, [pc, #16]	; (80001d8 <__do_global_dtors_aux+0x1c>)
 80001c6:	b113      	cbz	r3, 80001ce <__do_global_dtors_aux+0x12>
 80001c8:	4804      	ldr	r0, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x20>)
 80001ca:	f3af 8000 	nop.w
 80001ce:	2301      	movs	r3, #1
 80001d0:	7023      	strb	r3, [r4, #0]
 80001d2:	bd10      	pop	{r4, pc}
 80001d4:	20000000 	.word	0x20000000
 80001d8:	00000000 	.word	0x00000000
 80001dc:	0800041c 	.word	0x0800041c

080001e0 <frame_dummy>:
 80001e0:	b508      	push	{r3, lr}
 80001e2:	4b03      	ldr	r3, [pc, #12]	; (80001f0 <frame_dummy+0x10>)
 80001e4:	b11b      	cbz	r3, 80001ee <frame_dummy+0xe>
 80001e6:	4903      	ldr	r1, [pc, #12]	; (80001f4 <frame_dummy+0x14>)
 80001e8:	4803      	ldr	r0, [pc, #12]	; (80001f8 <frame_dummy+0x18>)
 80001ea:	f3af 8000 	nop.w
 80001ee:	bd08      	pop	{r3, pc}
 80001f0:	00000000 	.word	0x00000000
 80001f4:	20000004 	.word	0x20000004
 80001f8:	0800041c 	.word	0x0800041c

080001fc <LED_Init>:
#include "LED.h"

void LED_Init(void)
{
 80001fc:	b480      	push	{r7}
 80001fe:	af00      	add	r7, sp, #0
	RCC->AHB2ENR |= ((1<<1) | (1<<2));
 8000200:	4b16      	ldr	r3, [pc, #88]	; (800025c <LED_Init+0x60>)
 8000202:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000204:	4a15      	ldr	r2, [pc, #84]	; (800025c <LED_Init+0x60>)
 8000206:	f043 0306 	orr.w	r3, r3, #6
 800020a:	64d3      	str	r3, [r2, #76]	; 0x4c
	while(!(RCC->AHB2ENR & ((1<<1) | (1<<2))));
 800020c:	bf00      	nop
 800020e:	4b13      	ldr	r3, [pc, #76]	; (800025c <LED_Init+0x60>)
 8000210:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000212:	f003 0306 	and.w	r3, r3, #6
 8000216:	2b00      	cmp	r3, #0
 8000218:	d0f9      	beq.n	800020e <LED_Init+0x12>
	GPIOB->MODER &= ~((0x03U<<14) | (0x03<<28));
 800021a:	4b11      	ldr	r3, [pc, #68]	; (8000260 <LED_Init+0x64>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	4a10      	ldr	r2, [pc, #64]	; (8000260 <LED_Init+0x64>)
 8000220:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8000224:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000228:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &= ~(0x03U<<14);
 800022a:	4b0e      	ldr	r3, [pc, #56]	; (8000264 <LED_Init+0x68>)
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	4a0d      	ldr	r2, [pc, #52]	; (8000264 <LED_Init+0x68>)
 8000230:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000234:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |=  ((0x01<<14) | (0x01<<28));
 8000236:	4b0a      	ldr	r3, [pc, #40]	; (8000260 <LED_Init+0x64>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	4a09      	ldr	r2, [pc, #36]	; (8000260 <LED_Init+0x64>)
 800023c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000240:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000244:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |=  (0x01U<<14);
 8000246:	4b07      	ldr	r3, [pc, #28]	; (8000264 <LED_Init+0x68>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a06      	ldr	r2, [pc, #24]	; (8000264 <LED_Init+0x68>)
 800024c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000250:	6013      	str	r3, [r2, #0]
}
 8000252:	bf00      	nop
 8000254:	46bd      	mov	sp, r7
 8000256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800025a:	4770      	bx	lr
 800025c:	40021000 	.word	0x40021000
 8000260:	48000400 	.word	0x48000400
 8000264:	48000800 	.word	0x48000800

08000268 <LED_ON>:
void LED3_OFF(void)
{
	GPIOB->BSRR |= (1<<30);
}
void LED_ON(void)
{
 8000268:	b480      	push	{r7}
 800026a:	af00      	add	r7, sp, #0
	GPIOC->BSRR |= (1<<7);
 800026c:	4b0b      	ldr	r3, [pc, #44]	; (800029c <LED_ON+0x34>)
 800026e:	699b      	ldr	r3, [r3, #24]
 8000270:	4a0a      	ldr	r2, [pc, #40]	; (800029c <LED_ON+0x34>)
 8000272:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000276:	6193      	str	r3, [r2, #24]
	GPIOB->BSRR |= (1<<7);
 8000278:	4b09      	ldr	r3, [pc, #36]	; (80002a0 <LED_ON+0x38>)
 800027a:	699b      	ldr	r3, [r3, #24]
 800027c:	4a08      	ldr	r2, [pc, #32]	; (80002a0 <LED_ON+0x38>)
 800027e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000282:	6193      	str	r3, [r2, #24]
	GPIOB->BSRR |= (1<<14);
 8000284:	4b06      	ldr	r3, [pc, #24]	; (80002a0 <LED_ON+0x38>)
 8000286:	699b      	ldr	r3, [r3, #24]
 8000288:	4a05      	ldr	r2, [pc, #20]	; (80002a0 <LED_ON+0x38>)
 800028a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800028e:	6193      	str	r3, [r2, #24]
}
 8000290:	bf00      	nop
 8000292:	46bd      	mov	sp, r7
 8000294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000298:	4770      	bx	lr
 800029a:	bf00      	nop
 800029c:	48000800 	.word	0x48000800
 80002a0:	48000400 	.word	0x48000400

080002a4 <LED_OFF>:
void LED_OFF(void)
{
 80002a4:	b480      	push	{r7}
 80002a6:	af00      	add	r7, sp, #0
	GPIOC->BSRR |= (1<<23);
 80002a8:	4b0b      	ldr	r3, [pc, #44]	; (80002d8 <LED_OFF+0x34>)
 80002aa:	699b      	ldr	r3, [r3, #24]
 80002ac:	4a0a      	ldr	r2, [pc, #40]	; (80002d8 <LED_OFF+0x34>)
 80002ae:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80002b2:	6193      	str	r3, [r2, #24]
	GPIOB->BSRR |= (1<<23);
 80002b4:	4b09      	ldr	r3, [pc, #36]	; (80002dc <LED_OFF+0x38>)
 80002b6:	699b      	ldr	r3, [r3, #24]
 80002b8:	4a08      	ldr	r2, [pc, #32]	; (80002dc <LED_OFF+0x38>)
 80002ba:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80002be:	6193      	str	r3, [r2, #24]
	GPIOB->BSRR |= (1<<30);
 80002c0:	4b06      	ldr	r3, [pc, #24]	; (80002dc <LED_OFF+0x38>)
 80002c2:	699b      	ldr	r3, [r3, #24]
 80002c4:	4a05      	ldr	r2, [pc, #20]	; (80002dc <LED_OFF+0x38>)
 80002c6:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80002ca:	6193      	str	r3, [r2, #24]
}
 80002cc:	bf00      	nop
 80002ce:	46bd      	mov	sp, r7
 80002d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	48000800 	.word	0x48000800
 80002dc:	48000400 	.word	0x48000400

080002e0 <main>:
#include "LED.h"

int main(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b082      	sub	sp, #8
 80002e4:	af00      	add	r7, sp, #0
	uint32_t i;

	LED_Init();
 80002e6:	f7ff ff89 	bl	80001fc <LED_Init>

	while(1)
	{
		LED_ON();		for(i = 0; i < 70000; i++);
 80002ea:	f7ff ffbd 	bl	8000268 <LED_ON>
 80002ee:	2300      	movs	r3, #0
 80002f0:	607b      	str	r3, [r7, #4]
 80002f2:	e002      	b.n	80002fa <main+0x1a>
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	3301      	adds	r3, #1
 80002f8:	607b      	str	r3, [r7, #4]
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a1f      	ldr	r2, [pc, #124]	; (800037c <main+0x9c>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d9f8      	bls.n	80002f4 <main+0x14>
		LED_OFF();		for(i = 0; i < 70000; i++);
 8000302:	f7ff ffcf 	bl	80002a4 <LED_OFF>
 8000306:	2300      	movs	r3, #0
 8000308:	607b      	str	r3, [r7, #4]
 800030a:	e002      	b.n	8000312 <main+0x32>
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	3301      	adds	r3, #1
 8000310:	607b      	str	r3, [r7, #4]
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a19      	ldr	r2, [pc, #100]	; (800037c <main+0x9c>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d9f8      	bls.n	800030c <main+0x2c>
		LED_ON();		for(i = 0; i < 70000; i++);
 800031a:	f7ff ffa5 	bl	8000268 <LED_ON>
 800031e:	2300      	movs	r3, #0
 8000320:	607b      	str	r3, [r7, #4]
 8000322:	e002      	b.n	800032a <main+0x4a>
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	3301      	adds	r3, #1
 8000328:	607b      	str	r3, [r7, #4]
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a13      	ldr	r2, [pc, #76]	; (800037c <main+0x9c>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d9f8      	bls.n	8000324 <main+0x44>
		LED_OFF();		for(i = 0; i < 70000; i++);
 8000332:	f7ff ffb7 	bl	80002a4 <LED_OFF>
 8000336:	2300      	movs	r3, #0
 8000338:	607b      	str	r3, [r7, #4]
 800033a:	e002      	b.n	8000342 <main+0x62>
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	3301      	adds	r3, #1
 8000340:	607b      	str	r3, [r7, #4]
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4a0d      	ldr	r2, [pc, #52]	; (800037c <main+0x9c>)
 8000346:	4293      	cmp	r3, r2
 8000348:	d9f8      	bls.n	800033c <main+0x5c>
		LED_ON();		for(i = 0; i < 70000; i++);
 800034a:	f7ff ff8d 	bl	8000268 <LED_ON>
 800034e:	2300      	movs	r3, #0
 8000350:	607b      	str	r3, [r7, #4]
 8000352:	e002      	b.n	800035a <main+0x7a>
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	3301      	adds	r3, #1
 8000358:	607b      	str	r3, [r7, #4]
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a07      	ldr	r2, [pc, #28]	; (800037c <main+0x9c>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d9f8      	bls.n	8000354 <main+0x74>
		LED_OFF();		for(i = 0; i < 70000; i++);
 8000362:	f7ff ff9f 	bl	80002a4 <LED_OFF>
 8000366:	2300      	movs	r3, #0
 8000368:	607b      	str	r3, [r7, #4]
 800036a:	e002      	b.n	8000372 <main+0x92>
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	3301      	adds	r3, #1
 8000370:	607b      	str	r3, [r7, #4]
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	4a01      	ldr	r2, [pc, #4]	; (800037c <main+0x9c>)
 8000376:	4293      	cmp	r3, r2
 8000378:	d9f8      	bls.n	800036c <main+0x8c>
		LED_ON();		for(i = 0; i < 70000; i++);
 800037a:	e7b6      	b.n	80002ea <main+0xa>
 800037c:	0001116f 	.word	0x0001116f

08000380 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000380:	480d      	ldr	r0, [pc, #52]	; (80003b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000382:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000384:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000388:	480c      	ldr	r0, [pc, #48]	; (80003bc <LoopForever+0x6>)
  ldr r1, =_edata
 800038a:	490d      	ldr	r1, [pc, #52]	; (80003c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800038c:	4a0d      	ldr	r2, [pc, #52]	; (80003c4 <LoopForever+0xe>)
  movs r3, #0
 800038e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000390:	e002      	b.n	8000398 <LoopCopyDataInit>

08000392 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000392:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000394:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000396:	3304      	adds	r3, #4

08000398 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000398:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800039a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800039c:	d3f9      	bcc.n	8000392 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800039e:	4a0a      	ldr	r2, [pc, #40]	; (80003c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003a0:	4c0a      	ldr	r4, [pc, #40]	; (80003cc <LoopForever+0x16>)
  movs r3, #0
 80003a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003a4:	e001      	b.n	80003aa <LoopFillZerobss>

080003a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003a8:	3204      	adds	r2, #4

080003aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003ac:	d3fb      	bcc.n	80003a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ae:	f000 f811 	bl	80003d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003b2:	f7ff ff95 	bl	80002e0 <main>

080003b6 <LoopForever>:

LoopForever:
  b LoopForever
 80003b6:	e7fe      	b.n	80003b6 <LoopForever>
  ldr   r0, =_estack
 80003b8:	200a0000 	.word	0x200a0000
  ldr r0, =_sdata
 80003bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003c0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003c4:	0800043c 	.word	0x0800043c
  ldr r2, =_sbss
 80003c8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003cc:	2000001c 	.word	0x2000001c

080003d0 <ADC1_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003d0:	e7fe      	b.n	80003d0 <ADC1_IRQHandler>
	...

080003d4 <__libc_init_array>:
 80003d4:	b570      	push	{r4, r5, r6, lr}
 80003d6:	4d0d      	ldr	r5, [pc, #52]	; (800040c <__libc_init_array+0x38>)
 80003d8:	4c0d      	ldr	r4, [pc, #52]	; (8000410 <__libc_init_array+0x3c>)
 80003da:	1b64      	subs	r4, r4, r5
 80003dc:	10a4      	asrs	r4, r4, #2
 80003de:	2600      	movs	r6, #0
 80003e0:	42a6      	cmp	r6, r4
 80003e2:	d109      	bne.n	80003f8 <__libc_init_array+0x24>
 80003e4:	4d0b      	ldr	r5, [pc, #44]	; (8000414 <__libc_init_array+0x40>)
 80003e6:	4c0c      	ldr	r4, [pc, #48]	; (8000418 <__libc_init_array+0x44>)
 80003e8:	f000 f818 	bl	800041c <_init>
 80003ec:	1b64      	subs	r4, r4, r5
 80003ee:	10a4      	asrs	r4, r4, #2
 80003f0:	2600      	movs	r6, #0
 80003f2:	42a6      	cmp	r6, r4
 80003f4:	d105      	bne.n	8000402 <__libc_init_array+0x2e>
 80003f6:	bd70      	pop	{r4, r5, r6, pc}
 80003f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003fc:	4798      	blx	r3
 80003fe:	3601      	adds	r6, #1
 8000400:	e7ee      	b.n	80003e0 <__libc_init_array+0xc>
 8000402:	f855 3b04 	ldr.w	r3, [r5], #4
 8000406:	4798      	blx	r3
 8000408:	3601      	adds	r6, #1
 800040a:	e7f2      	b.n	80003f2 <__libc_init_array+0x1e>
 800040c:	08000434 	.word	0x08000434
 8000410:	08000434 	.word	0x08000434
 8000414:	08000434 	.word	0x08000434
 8000418:	08000438 	.word	0x08000438

0800041c <_init>:
 800041c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800041e:	bf00      	nop
 8000420:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000422:	bc08      	pop	{r3}
 8000424:	469e      	mov	lr, r3
 8000426:	4770      	bx	lr

08000428 <_fini>:
 8000428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800042a:	bf00      	nop
 800042c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800042e:	bc08      	pop	{r3}
 8000430:	469e      	mov	lr, r3
 8000432:	4770      	bx	lr
